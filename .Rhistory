data$Date <- yymmdd
?lubridate
ymd(data$Date)
View(data)
data$Date <- ymd(data$Date)
View(data)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "Menu","Qty","Price","Cost")
colnames(data) <- new_vars
View(data)
sun.transaction <- select(data, Transaction, Menu)
summary(data)
sun.transaction <- select(Transaction, Menu)
select(data, Transaction, Menu)
library(dplyr)
library(arulesViz)
library(arules)
library(lattice)
library(DataExplorer)
library(lubridate)
library(tidyverse)
library(readxl)
select(data, Transaction, Menu)
?select
data <- as_tibble(data)
View(data)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "ID","Menu","Qty","Price","Cost")
colnames(data) <- new_vars
summary(data)
data <- as_tibble(data)
select(data, Transaction, Menu)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
data$Day <- wday(data$Date, label = T)
View(data)
# arrange columns
colnames(data)
data <- data[, c(1,11,2,3,4,5,6,7,8,9,10)]
data
# Set factors
cols <- c("Date","Transaction","Category", "Class", "ID","Menu","Day")
data <-data %>% mutate_at(cols, factor)
head(sun)
head(data)
data <- as_tibble(data)
#filter data
data <- as_tibble(data)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
plot_histogram(data, title ="Univariate Analysis for Continuous Data")
plot_bar(data, title ="Univariate Analysis for Factored Data")
attach(data)
plot(date)
plot(Date)
plot(Day)
plot(Transaction)
plot_scatterplot(Transaction)
qplot(Transaction)
plot(Class)
qplot(Class)
qplot(Class, horizontal= T)
qplot(Class, horiz= T)
ggplot(data)
# left
ggplot(data = data) +
geom_point(mapping = aes(x = Day, y = Transaction))
# right
ggplot(data = data) +
geom_smooth(mapping = aes(x = Day, y = Transaction))
# right
ggplot(data = data) +
geom_smooth(mapping = aes(x = Date, y = Transaction))
# right
ggplot(data = data) +
geom_smooth(mapping = aes(x = Date, y = Class))
# left
ggplot(data = data) +
geom_point(mapping = aes(x = Day, y = Class))
plot(Class)
ggplot(data = data) +
geom_bar(mapping = aes(x = Class, fill = Category), position = "dodge")
ggplot(data = data) +
geom_bar(mapping = aes(x = Class, fill = Day), position = "dodge")
ggplot(data = data) +
geom_bar(mapping = aes(x = Category, fill = Day), position = "dodge")
ggplot(data = data) +
geom_bar(mapping = aes(x = Transaction, fill = Day), position = "dodge")
ggplot(data = data) +
geom_bar(mapping = aes(x = Transaction, fill = Day), position = "dodge") +  coord_flip()
ggplot(data = data) +
geom_point(mapping = aes(x = Transaction, y = Day), position = "jitter")
ggplot(data = data) +
geom_point(mapping = aes(x = Category, y = Day), position = "jitter")
# left
ggplot(data = data) +
geom_point(mapping = aes(x = Day, y = Class))
# left
ggplot(data = data) +
geom_point(mapping = aes(x = Day, y = Class))
# right
ggplot(data = data) +
geom_smooth(mapping = aes(x = Date, y = Class))
ggplot(data = data) +
geom_bar(mapping = aes(x = Category, fill = Day), position = "dodge")
ggplot(data = data) +
geom_bar(mapping = aes(x = Transaction, fill = Day), position = "dodge")
ggplot(data = data) +
geom_point(mapping = aes(x = Category, y = Day), position = "jitter")
boxplot(Date)
boxplot(Price)
which.max(Price)
boxplot(Day, Transaction)
boxplot(Transaction, Day)
boxplot(Transaction, Date)
boxplot(Transaction)
boxplot(Cost)
ggplot(data,aes(Day)) + geom_histogram()
ggplot(data,aes(Price)) + geom_histogram()
ggplot(data,aes(Qty)) + geom_histogram()
ggplot(data,aes(Category)) + geom_histogram()
quantile(data$Price,c(0.01,0.02,0.03,0.1,0.2,0.3,0.4,0.50,0.6,0.7,0.8,0.9,0.95,0.99,1)) # significant difference in 0% and 1%
# Let's floor the variable at 1%
data$Price[which(data$Price<1274)] <- 1274
# Let's floor the variable at 1%
data$Price[which(data$Price<1274)]
quantile(data$Price,c(0.01,0.02,0.03,0.1,0.2,0.3,0.4,0.50,0.6,0.7,0.8,0.9,0.95,0.99,1)) # significant difference in 0% and 1%
setwd("C:/Users/Ping/Documents/GitHub/dsba")
library(lubridate)
library(tidyverse)
library(readxl)
library(dplyr)
library(arulesViz)
library(arules)
library(lattice)
library(DataExplorer)
data <- read_xlsx("allmenu.xlsx")
nrow(data)
str(data)
summary(data)
data$Date <- ymd(data$Date)
data$Day <- wday(data$Date, label = T)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "ID","Menu","Qty","Price","Cost")
colnames(data) <- new_vars
summary(data)
# arrange columns
colnames(data)
data <- data[, c(1,11,2,3,4,5,6,7,8,9,10)]
data
# Set factors
cols <- c("Date","Transaction","Category", "Class", "ID","Menu","Day")
data <-data %>% mutate_at(cols, factor)
data <-data %>% mutate_at(cols, factor)
data <-data %>% mutate_at(cols, factor)
# Set factors
cols <- c("Date","Transaction","Category", "Class", "ID","Menu","Day")
data <-data %>% mutate_at(cols, factor)
data$Day <- wday(data$Date, label = T)
# arrange columns
colnames(data)
data <- data[, c(1,11,2,3,4,5,6,7,8,9,10)]
data
# Set factors
cols <- c("Date","Transaction","Category", "Class", "ID","Menu","Day")
data <-data %>% mutate_at(cols, factor)
# Set factors
cols <- c("Date","Transaction","Category", "Class", "ID","Menu")
data <-data %>% mutate_at(cols, factor)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "ID","Menu","Qty","Price","Cost")
colnames(data) <- new_vars
summary(data)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "ID","Menu","Qty","Price","Cost","Day")
colnames(data) <- new_vars
summary(data)
# arrange columns
colnames(data)
data <- data[, c(1,11,2,3,4,5,6,7,8,9,10)]
data
# Set factors
cols <- c("Date","Transaction","Category", "Class", "ID","Menu")
data <-data %>% mutate_at(cols, factor)
data <-data %>% mutate_at(cols, factor)
head(data)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "ID","Menu","Qty","Price","Cost","Day")
colnames(data) <- new_vars
summary(data)
View(data)
setwd("C:/Users/Ping/Documents/GitHub/dsba")
library(lubridate)
library(tidyverse)
library(readxl)
library(dplyr)
library(arulesViz)
library(arules)
library(lattice)
library(DataExplorer)
data <- read_xlsx("allmenu.xlsx")
nrow(data)
str(data)
summary(data)
data$Date <- ymd(data$Date)
data$Day <- wday(data$Date, label = T)
head(data)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "Code","Menu","Qty","Price","Cost","Day")
colnames(data) <- new_vars
summary(data)
View(data)
# arrange columns
colnames(data)
data <- data[, c(1,11,2,3,4,5,6,7,8,9,10)]
data
# arrange columns
colnames(data)
View(data)
# Set factors
cols <- c("Date","Transaction","Category", "Class", "ID","Menu")
data <-data %>% mutate_at(cols, factor)
# arrange columns
colnames(data)
summary(data)
data1 <- data %>% mutate_at(cols, factor)
# Set factors
cols <- c("Date","Transaction","Category", "Class","Menu")
data <- data %>% mutate_at(cols, factor)
head(data)
#filter data for rules
data <- as_tibble(data)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
quantile(data$Price,c(0.01,0.02,0.03,0.1,0.2,0.3,0.4,0.50,0.6,0.7,0.8,0.9,0.95,0.99,1)) # significant difference in 0% and 1%
# Let's floor the variable at 99%
data$Price[which(data$Price > 1274)]
View(data)
# Let's floor the variable at 99%
data$Price[which(data$Price > 1274)] < 1274.44
View(data)
# Let's floor the variable at 99%
data <- data[-c(168151), ]
#filter data for rules
data <- as_tibble(data)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
plot_histogram(data, title ="Univariate Analysis for Continuous Data")
plot_bar(data, title ="Univariate Analysis for Factored Data")
plot(Date)
plot(Date)
plot(Day)
plot(Class)
boxplot(Cost)
boxplot(Price)
attach(data)
plot(Date)
plot(Day)
plot(Class)
boxplot(Price)
View(data)
# Let's floor the variable at 99%
data <- data[-c(168150), ]
#filter data for rules
data <- as_tibble(data)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
plot_histogram(data, title ="Univariate Analysis for Continuous Data")
plot_bar(data, title ="Univariate Analysis for Factored Data")
attach(data)
plot(Date)
plot(Day)
plot(Class)
boxplot(Price)
setwd("C:/Users/Ping/Documents/GitHub/dsba")
library(lubridate)
library(tidyverse)
library(readxl)
library(dplyr)
library(arulesViz)
library(arules)
library(lattice)
library(DataExplorer)
data <- read_xlsx("allmenu.xlsx")
nrow(data)
str(data)
summary(data)
data$Date <- ymd(data$Date)
data$Day <- wday(data$Date, label = T)
head(data)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "Code","Menu","Qty","Price","Cost","Day")
colnames(data) <- new_vars
summary(data)
# arrange columns
colnames(data)
data <- data[, c(1,11,2,3,4,5,6,7,8,9,10)]
summary(data)
# Set factors
cols <- c("Date","Transaction","Category", "Class","Menu")
data <- data %>% mutate_at(cols, factor)
head(data)
quantile(data$Price,c(0.01,0.02,0.03,0.1,0.2,0.3,0.4,0.50,0.6,0.7,0.8,0.9,0.95,0.99,1)) # significant difference in 0% and 1%
#filter data for rules
data <- as_tibble(data)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
data <- as_tibble(data)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
plot_histogram(data, title ="Univariate Analysis for Continuous Data")
plot_bar(data, title ="Univariate Analysis for Factored Data")
attach(data)
plot(Date)
plot(Day)
plot(Class)
boxplot(Price)
ggplot(data = data) +
geom_bar(mapping = aes(x = Category, fill = Day), position = "dodge")
ggplot(data = data) +
geom_bar(mapping = aes(x = Transaction, fill = Day), position = "dodge")
attach(data)
plot(Date)
plot(Day)
plot(Transaction)
plot(CategoryID)
plot(Category)
plot(ClassID)
plot(ID)
plot(Menu)
plot(Qty)
boxplot(Price)
qplot(CostAmt)
qplot(Cost)
plot(CostPC)
plot_histogram(sun, title ="Univariate Analysis for Continuous Data")
plot_histogram(data, title ="Univariate Analysis for Continuous Data")
plot_bar(data, title ="Univariate Analysis for Factored Data")
Agg.RTxn <- split(data$Menu ,data$Transaction)
class(Agg.RTxn)
## To see specific row number transaction
Agg.RTxn [35]
Agg.RTxn_DD <- list()
for (i in 1:length(Agg.RTxn)) {
Agg.RTxn_DD[[i]] <- as.character(Agg.RTxn[[i]][!duplicated(Agg.RTxn[[i]])])
}
## converting transaction items from list format to transaction format
Txns <- as(Agg.RTxn_DD, "transactions")
summary(Txns)
summary(Txns)
inspect(Txns[1:5])
freq <- itemFrequency(Txns)
freq <- freq[order(-freq)]
freq["Chawanmushi"]
freq["Green Tea"]
qplot(freq)
barplot(freq[1:10], horiz = TRUE, axisnames = TRUE, las=1, cex.names=0.5)
itemFrequencyPlot(Txns, support = 0.5)
itemFrequencyPlot(Txns, support = 0.7)
itemFrequencyPlot(Txns, support = 0.1)
itemFrequencyPlot(Txns, topN = 10)
library("arulesViz")
arules1 <- apriori(data = Txns, parameter=list(supp= 0.01, conf = 0.5, minlen = 2))
summary(arules1)
arules1 <- apriori(data = Txns, parameter=list(supp= 0.1, conf = 0.5, minlen = 2))
arules1 <- apriori(data = Txns, parameter=list(supp= 0.5, conf = 0.5, minlen = 2))
summary(arules1)
inspect(sort(arules1,by="support"))
arules1 <- apriori(data = Txns, parameter=list(supp= 0.3, conf = 0.5, minlen = 2))
summary(arules1)
inspect(sort(arules1,by="support"))
arules2 <- apriori(data = Txns, parameter = list(support = 0.3, confidence = 0.5, minlen = 2))
inspect(sort(arules2,by="confidence"))
library(RColorBrewer)
plot ( arules2,control=list(
col = brewer.pal(11,"Spectral")
),
main="Association Rules Plot"
)
subrules2 <- head(sort(arules2, by="support"), 10)
plot(subrules2, method = "graph" )
subrules2 <- head(sort(arules2, by="confidence"), 20)
plot(subrules2, method = "graph" )
rules_df <- as(arules2,"data.frame")
rules_df$lhs_support <- rules_df$support/ rules_df$confidence;
rules_df$rhs_support <- rules_df$confidence / rules_df$lift;
View(rules_df)
rules.tofu <- apriori (data=Agg.RTxn_DD,
parameter=list (supp=0.001,conf = 0.01, minlen = 2),
appearance = list (default="rhs",lhs="SUN Tofu Cheesecake"),
control = list (verbose=F))
rules.tofu1 <- head(sort(rules.tofu, by="support"), 10)
plot(rules.tofu1, method = "graph")
rules.eihire <- apriori (data=Agg.RTxn_DD,
parameter=list (supp=0.001,conf = 0.01, minlen = 2),
appearance = list (default="rhs",lhs="Eihire Aburi"),
control = list (verbose=F))
rules.eihire1 <- head(sort(rules.eihire, by="support"), 10)
plot(rules.eihire1, method = "graph")
rules.edamame <- apriori (data=Agg.RTxn_DD,
parameter=list (supp=0.001,conf = 0.01, minlen = 2),
appearance = list (default="rhs",lhs="Edamame"),
control = list (verbose=F))
rules.edamame1 <- head(sort(rules.edamame, by="support"), 10)
plot(rules.edamame1, method = "graph")
rules.beer <- apriori (data=Agg.RTxn_DD,
parameter=list (supp=0.001,conf = 0.01, minlen = 2),
appearance = list (default="rhs",lhs="Premium Malts 380ml"),
control = list (verbose=F))
rules.beer1 <- head(sort(rules.beer, by="support"), 10)
plot(rules.beer1, method = "graph")
rules.hama <- apriori (data=Agg.RTxn_DD,
parameter=list (supp=0.001,conf = 0.01, minlen = 2),
appearance = list (default="rhs",lhs="Hamachi Kama Yaki"),
control = list (verbose=F))
rules.hama1 <- head(sort(rules.hama, by="support"), 10)
plot(rules.hama1, method = "graph")
setwd("C:/Users/Ping/Documents/GitHub/dsba")
library(lubridate)
library(tidyverse)
library(readxl)
library(dplyr)
library(arulesViz)
library(arules)
library(lattice)
library(DataExplorer)
setwd("C:/Users/Ping/Documents/GitHub/dsba")
library(lubridate)
library(tidyverse)
library(readxl)
library(dplyr)
library(arulesViz)
library(arules)
library(lattice)
library(DataExplorer)
data <- read_xlsx("allmenu.xlsx")
nrow(data)
str(data)
summary(data)
data$Date <- ymd(data$Date)
data$Day <- wday(data$Date, label = T)
head(data)
new_vars <- c("Date","Transaction","Row", "Category", "Class", "Code","Menu","Qty","Price","Cost","Day")
colnames(data) <- new_vars
summary(data)
# arrange columns
colnames(data)
data <- data[, c(1,11,2,3,4,5,6,7,8,9,10)]
summary(data)
# Set factors
cols <- c("Date","Transaction","Category", "Class","Menu")
data <- data %>% mutate_at(cols, factor)
head(data)
quantile(data$Price,c(0.01,0.02,0.03,0.1,0.2,0.3,0.4,0.50,0.6,0.7,0.8,0.9,0.95,0.99,1)) # significant difference in 0% and 1%
#filter data for rules
data <- as_tibble(data)
transdata <- select(data, Transaction, Menu)
classdata <- select(data, Transaction, Class)
catdata <- select(data, Transaction, Category)
View(classdata)
Agg.RTxn <- split(classdata$Class ,classdata$Transaction)
class(Agg.RTxn)
## To see specific row number transaction
Agg.RTxn [35]
## logic to remove duplicate items from the list
Agg.RTxn_DD <- list()
for (i in 1:length(Agg.RTxn)) {
Agg.RTxn_DD[[i]] <- as.character(Agg.RTxn[[i]][!duplicated(Agg.RTxn[[i]])])
}
## converting transaction items from list format to transaction format
Txns <- as(Agg.RTxn_DD, "transactions")
summary(Txns)
inspect(Txns[1:5])
freq <- itemFrequency(Txns)
freq <- freq[order(-freq)]
freq["Edamame"]
freq["KM Dinner"]
qplot(freq)
barplot(freq[1:10], horiz = TRUE, axisnames = TRUE, las=1, cex.names=0.5)
itemFrequencyPlot(Txns, support = 0.1)
itemFrequencyPlot(Txns, topN = 10)
itemFrequencyPlot(Txns, topN = 20)
arules1 <- apriori(data = Txns, parameter=list(supp= 0.3, conf = 0.5, minlen = 2))
summary(arules1)
inspect(sort(arules1,by="support"))
arules2 <- apriori(data = Txns, parameter = list(support = 0.05, confidence = 0.1, minlen = 2))
inspect(sort(arules2,by="confidence"))
ibrary(RColorBrewer)
library(RColorBrewer)
plot ( arules2,control=list(
col = brewer.pal(11,"Spectral")
),
main="Association Rules Plot"
)
subrules2 <- head(sort(arules2, by="support"), 10)
plot(subrules2, method = "graph" )
subrules2 <- head(sort(arules2, by="confidence"), 20)
plot(subrules2, method = "graph" )
rules_df <- as(arules2,"data.frame")
rules_df$lhs_support <- rules_df$support/ rules_df$confidence;
rules_df$rhs_support <- rules_df$confidence / rules_df$lift;
View(rules_df)
summary(Txns)
#setwd("C:\Users\suping\Desktop\New folder\dsba-master\dsba-master")
library(lubridate)
library(tidyverse)
library(readxl)
library(dplyr)
library(arulesViz)
library(arules)
library(lattice)
library(DataExplorer)
data <- read_xlsx("sole.xlsx")
